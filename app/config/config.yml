imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en
    app.path.workers_images: /uploads/images/workers

framework:
    #esi:             ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~
    translator: { fallbacks: [ "en" ] }
# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"
    date:
        timezone: Europe/Vilnius

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true
        filters:
            softdeleteable:
                class: Gedmo\SoftDeleteable\Filter\SoftDeleteableFilter

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

knpu_oauth2_client:
    clients:
        # the key "facebook_main" can be anything, it
        # will create a service: "knpu.oauth2.client.facebook_main"
        facebook_main:
            # this will be one of the supported types
            type: facebook
            client_id: "%facebook_app_id%"
            client_secret: "%facebook_app_secret%"
            # the route that you're redirected to after
            # see the controller example below
            redirect_route: connect_facebook_check
            # route parameters to pass to your route, if needed
            redirect_params: {}
            graph_api_version: v2.10

#Migrations Configuration
doctrine_migrations:
    dir_name: "%kernel.root_dir%/DoctrineMigrations"
    namespace: Application\Migrations
    table_name: migration_versions
    name: Application Migrations
    organize_migrations: false

#Migrations Configuration
stof_doctrine_extensions:
    default_locale: en_US
    orm:
        default:
            timestampable: true

easy_admin:
    site_name: 'Nail Studio Admin'
    formats:
        date:     'd/m/Y'
        time:     'H:i'
        datetime: 'd/m/Y H:i:s'
    list_actions: ['show']
    list:
        title: 'List of %%entity_label%%'
    entities:
        Clients:
            class: AppBundle\Entity\User
            label: Clients
            list:
                fields: ['id', 'name', 'email', 'created', 'updated' , 'facebookId', 'roles']
            edit:
                fields: ['name', 'email', 'roles']
        Workers:
            class: AppBundle\Entity\Worker
            multiple: true
            label: Workers
            list:
                fields: ['id', 'name' , 'position', 'about', 'services', { property: 'image', type: 'image', base_path: '%app.path.workers_images%' }]
            form:
                fields: ['name' , 'position', 'about', 'services', { property: 'imageFile', type: 'file' }]
        Services:
            class: AppBundle\Entity\Service
            multiple: true
            label: Services
            list:
                fields: ['id', 'title' , 'duration', 'price']
            edit:
                fields: ['title' , 'duration', 'price']
        Schedule:
            class: AppBundle\Entity\Schedule
            label: Schedule
            list:
                fields: ['id', 'title' , 'start', 'end']
    design:
        menu:
            - { entity: 'Clients', icon: 'users' }
            - { entity: 'Workers', icon: 'user-secret' }
            - { entity: 'Services', icon: 'list' }
            - { entity: 'Schedule', icon: 'calendar' }
        brand_color: '#DB7093'

# Vich Uploader
vich_uploader:
    db_driver: orm
    mappings:
        worker_images:
            uri_prefix:         '%app.path.workers_images%'
            upload_destination: '%kernel.root_dir%/../web/uploads/images/workers'
